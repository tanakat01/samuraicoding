from game import P
from game import WEAPONS

# cmds =[[1,7],[2,8],[1,8],[3,8],[1,8],[4,7],[3,7],[7,1],[7,2],[8,3],[8,1],[3,8],[4,8],[8,4],[7,3],[7,1],[7,2],[8,3]]
#cmds = [[1,7],[2,8],[3,8],[1,8],[4,7],[3,7],[7,1],[7,2],[8,3],[8,1],[8,3],[5,4],[8,8,8],[3,5],[4,5],[2,5],[1,8],[4,8],[8,2],[8,3],[5,4],[5,2],[5,1],[8,4],[5,5,5],[1,8],[4,8],[2,8],[3,5],[4,5],[5,1],[2,8],[4,8],[8,2],[8,3],[5,4],[5,2],[5,1],[8,4]]
# cmds = [[1,7],[2,8],[3,8],[1,8],[4,7],[3,7],[7,1],[7,2],[8,3],[8,1],[8,3],[5,4],[8,8,8],[3,5],[4,5],[2,5],[1,8],[4,8],[8,2],[8,3],[5,4],[5,2],[5,1],[8,4],[5,5,5],[1,8],[4,8],[2,8],[3,5],[4,5],[5,2],[5,1],[8,4],[8,2],[8,3],[5,4],[5,5,5],[1,8],[4,8],[2,8],[3,5],[4,5],[5,2],[5,1],[8,4],[8,2]]
# cmds = [[1,7],[2,8],[3,8],[1,8],[4,7],[3,7],[7,1],[7,2],[8,3],[8,1],[8,3],[5,4],[8,8,8],[3,5],[4,5],[2,5],[1,8],[4,8],[8,2],[8,3],[5,4],[5,2],[5,1],[8,4],[5,5,5],[1,8],[4,8],[2,8],[3,5],[4,5],[5,2],[5,1],[8,4],[8,2],[8,3],[5,4],[5,5,5],[1,8],[4,8],[2,8],[3,5],[4,5],[5,2],[5,1],[8,4],[8,2],[5,4]]
# cmds = [[1,7],[2,8],[3,8],[1,8],[4,7],[3,7],[7,1],[7,2],[8,3],[8,1],[8,3],[5,4],[8,8,8],[3,5],[4,5],[2,5],[1,8],[4,8],[8,2],[8,3],[5,4],[5,2],[5,1],[8,4],[5,5,5],[1,8],[4,8],[2,8],[3,5],[4,5],[5,2],[5,1],[8,4],[8,2],[8,3],[5,4],[5,5,5],[1,8],[4,8],[2,8],[3,5],[4,5],[5,2],[5,1],[8,4],[8,2],[8,3],[8,4],[7,3]]
cmds = [[1,7],[2,8],[3,8],[1,8],[4,7],[3,7],[7,1],[7,2],[8,3],[8,1],[8,3],[5,4],[8,8,8],[3,5],[4,5],[2,5],[1,8],[4,8],[8,2],[8,3],[5,4],[5,2],[5,1],[8,4],[5,5,5],[1,8],[4,8],[2,8],[3,5],[4,5],[5,2],[5,1],[8,4],[8,2],[8,3],[5,4],[5,5,5],[1,8],[4,8],[2,8],[3,5],[4,5],[5,2],[5,1],[8,4],[8,2],[8,3],[5,4],[5,5,5],[1,8],[4,8],[2,8],[3,5],[4,5],[5,2],[5,1],[8,4],[8,2],[5,4]]
cmds = [[1,7],[2,8],[3,8],[1,8],[4,7],[3,7],[7,1],[7,2],[8,3],[8,1],[8,3],[5,4],[8,8,8],[3,5],[4,5],[2,5],[1,8],[4,8],[8,2],[8,3],[5,4],[5,2],[5,1],[8,4],[5,5,5],[1,8],[4,8],[2,8],[3,5],[4,5],[5,2],[5,1],[8,4],[8,2],[8,3],[5,4],[5,5,5],[1,8],[4,8],[2,8],[3,5],[4,5],[5,2],[5,1],[8,4],[8,2],[8,3],[5,4],[5,5,5],[1,8],[4,8],[2,8],[3,5],[4,5],[5,1],[2,8],[4,8],[8,2],[8,3],[5,4],[5,2],[5,1],[8,4]]
cmds = [[1,7],[2,8],[3,8],[1,8],[4,7],[3,7],[7,1],[7,2],[8,3],[8,1],[8,3],[5,4],[8,8,8],[3,5],[4,5],[2,5],[1,5],[1,8],[4,8],[2,8],[3,5],[4,5],[5,2],[5,1],[8,4],[8,2],[4,8],[3,8],[8,3],[5,4],[5,2],[5,1],[5,4],[6,1]]
cmds = [[1,7],[2,8],[3,8],[1,8],[4,7],[3,7],[7,1],[7,2],[8,3],[8,1],[8,3],[5,4],[8,8,8],[3,5],[4,5],[2,5],[1,8],[4,8],[8,2],[8,3],[5,4],[5,2],[5,1],[8,4],[5,5,5],[1,8],[4,8],[2,8],[3,5],[4,5],[5,2],[5,1],[8,4],[8,2],[8,3],[5,4],[5,5,5],[1,8],[4,8],[2,8],[3,5],[4,5],[5,2],[5,1],[8,4],[8,2],[8,3],[4,8],[8,3],[5,4]]
cmds = [[1,7],[2,8],[3,8],[1,8],[4,7],[3,7],[7,1],[7,2],[8,3],[8,1],[8,3],[5,4],[8,8,8],[3,5],[4,5],[2,5],[1,8],[4,8],[8,2],[8,3],[5,4],[5,2],[5,1],[8,4],[5,5,5],[1,8],[4,8],[2,8],[3,5],[4,5],[5,2],[5,1],[8,4],[8,2],[8,3],[5,4],[5,5,5],[1,8],[4,8],[2,8],[3,5],[4,5],[5,2],[5,1],[8,4],[8,2],[8,3],[5,4],[5,5,5],[1,8],[4,8],[2,8],[3,5],[4,5],[5,2],[5,1],[8,4],[8,2],[8,3],[5,4],[5,4],[5,2],[5,1],[5,1],[8,4],[8,2],[8,3],[5,4],[5,4],[5,2],[5,1],[5,4],[6,1]]

# si = 0
# cmds = [[1,6],[1,6],[1,6]]
si = 2
cmds = [[1,6],[7,3],[6,6,6],[1,6],[7,3],[6,6,6],[1,6],[7,3],[6,6,6]]

points = {}
occs = []
moves = []
ws = ['spear', 'swords', 'battleaxe']

p = P(0, 0)
moves.append((p, False))
for cmd in cmds:
    has_oc = False
    for c in cmd:
        if c < 5:
            has_oc = True
            occs.append((p, c))
            for dp in WEAPONS[si]:
                p1 = p + dp.rotate(c - 1)
                if p1 not in points:
                    points[p1] = 0
                points[p1] += 1
        else:
            p = p + P(0, 1).rotate(c - 5)
    moves.append((p, has_oc))

print("""%!
/square {/col exch def /y exch neg def /x exch def
1.0 col 0.15 mul sub setgray
% 0 setgray
newpath x -0.5 add y -0.5 add moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto closepath fill} def
/swords {/r exch def /y exch neg def /x exch def
0.2 setlinewidth
0 setgray gsave x y translate
r rotate
newpath
-0.49 -0.49 moveto
-0.49 -2.49 lineto 0.49 -2.49 lineto 0.49 -1.49 lineto 1.49 -1.49 lineto 1.49 -0.49 lineto 2.49 -0.49 lineto 2.49 0.49 lineto 0.49 0.49 lineto 0.49 -0.49 lineto -0.49 -0.49 lineto stroke grestore} def
/spear {
/r exch def /y exch neg def /x exch def
0.2 setlinewidth
0 setgray gsave x y translate
r rotate
newpath
-0.49 -0.49 moveto
-0.49 -4.49 lineto 0.49 -4.49 lineto 
0.49 -0.49 lineto -0.49 -0.49 lineto 
stroke grestore} def
/battleaxe {
/r exch def /y exch neg def /x exch def
0.2 setlinewidth
0 setgray gsave x y translate
r rotate
newpath
-1.49 1.49 moveto
-1.49 -1.49 lineto 1.49 -1.49 lineto 
1.49 1.49 lineto 0.49 1.49 lineto 0.49 -0.49 lineto
-0.49 -0.49 lineto -0.49 1.49 lineto -1.49 1.49 lineto
stroke grestore} def

/arrow {/has_oc exch def /y1 exch neg def /x1 exch def /y0 exch neg def /x0 exch def
1 0 0 setrgbcolor
0.3 0.2 has_oc mul sub setlinewidth
x0 y0 moveto
x1 y1 lineto
stroke } def
7.2 7.2 scale
40 50 translate
""")
for p in points:
    print('%s %s %s square' % (p.x, p.y, points[p]))
for p, d in occs:
    print('%s %s %s %s' % (p.x, p.y, (d - 1) * 90, ws[si]))
for i in range(len(moves) - 1):
    p0, p1 = moves[i][0], moves[i + 1][0]
    has_oc = moves[i + 1][1]
    print('%s %s %s %s %s arrow' % (p0.x, p0.y, p1.x, p1.y, 0 if has_oc else 1))
print('1 0 0 setrgbcolor newpath 0 0 0.3 0 360 arc closepath fill showpage')
# print(points)

# print(occs)


